%基于一个选定的L1B文件，先调用python程序进行优化，然后绘制高度-速度图像
clear;
clc;
close all;

[file,location] = uigetfile('.txt'); %打开文件选择框
filepath = fullfile(location, file);%拼接文件名
disp(filepath)
command="python libfix.py "+filepath+" "+file;
[status,cmdout] = system(command,'-echo');
%disp(cmdout);
draw(filepath);
new_filepath = filepath(1:end-length(file)) + "Processed\" + file(1:end-4) + "_Processed.txt";
draw(new_filepath);

function draw(filepath)
    % 初始化变量存储数据
    heights = [];
    rv1 = [];
    rv2 = [];
    rv3 = [];
    rv4 = [];
    rv5 = [];

    fileID = fopen(filepath);

    for i = 1:9
        fg = fgetl(fileID);
    end
    time = fg(17:32);
    for i = 1:5
        fg = fgetl(fileID);
    end
    freq = fg(19:26);

    fclose(fileID);

    % 使用 readmatrix 读取数据
    dataMatrix = readmatrix(filepath, 'CommentStyle', '#');

    % 提取所需的列
    heights = dataMatrix(:, 1);
    rv1 = dataMatrix(:, 3);
    rv2 = dataMatrix(:, 6);
    rv3 = dataMatrix(:, 9);
    rv4 = dataMatrix(:, 12);
    rv5 = dataMatrix(:, 15);

    % 绘制所有波束的径向速度随高度变化的曲线
    % 过滤缺失值（这里以-9999999作为缺失值的标记，根据实际情况调整）
    rv1(rv1 == -9999999) = NaN;
    rv2(rv2 == -9999999) = NaN;
    rv3(rv3 == -9999999) = NaN;
    rv4(rv4 == -9999999) = NaN;
    rv5(rv5 == -9999999) = NaN;



    % 找到 heights 小于30000的索引
idx_low = heights < 30000;
% 找到 heights 大于等于30000的索引
idx_high = heights >= 30000;

% 分割 rv1 到不同的部分
rv1_low = rv1(idx_low);
heights_low = heights(idx_low);
rv1_high = rv1(idx_high);
heights_high = heights(idx_high);

% 分割其他 rv 到不同的部分
rv2_low = rv2(idx_low);
rv2_high = rv2(idx_high);
rv3_low = rv3(idx_low);
rv3_high = rv3(idx_high);
rv4_low = rv4(idx_low);
rv4_high = rv4(idx_high);
rv5_low = rv5(idx_low);
rv5_high = rv5(idx_high);

% 创建图形窗口
figure;

% 绘制 Beams 的低高度部分
plot(rv1_low, heights_low, 'b-', 'LineWidth', 1.5, 'DisplayName', 'Beam 1 (low)', 'Marker', 'o');
hold on;
plot(rv2_low, heights_low, 'r-', 'LineWidth', 1.5, 'DisplayName', 'Beam 2 (low)', 'Marker', 's');
plot(rv3_low, heights_low, 'g-', 'LineWidth', 1.5, 'DisplayName', 'Beam 3 (low)', 'Marker', '^');
plot(rv4_low, heights_low, 'm-', 'LineWidth', 1.5, 'DisplayName', 'Beam 4 (low)', 'Marker', 'x');
plot(rv5_low, heights_low, 'c-', 'LineWidth', 1.5, 'DisplayName', 'Beam 5 (low)', 'Marker', 'd');

% 绘制 Beams 的高高度部分
plot(rv1_high, heights_high, 'b--', 'LineWidth', 1.5, 'DisplayName', 'Beam 1 (high)', 'Marker', 'o');
plot(rv2_high, heights_high, 'r--', 'LineWidth', 1.5, 'DisplayName', 'Beam 2 (high)', 'Marker', 's');
plot(rv3_high, heights_high, 'g--', 'LineWidth', 1.5, 'DisplayName', 'Beam 3 (high)', 'Marker', '^');
plot(rv4_high, heights_high, 'm--', 'LineWidth', 1.5, 'DisplayName', 'Beam 4 (high)', 'Marker', 'x');
plot(rv5_high, heights_high, 'c--', 'LineWidth', 1.5, 'DisplayName', 'Beam 5 (high)', 'Marker', 'd');

% 添加图例
legend show;

    % 调整坐标轴显示范围以适应数据
    xlim([min([rv1,rv2,rv3,rv4,rv5],[], 'all'), max([rv1,rv2,rv3,rv4,rv5],[], 'all')]);
    ylim([min(heights, [],'all'), max(heights,[], 'all')]);

    % 设置图表属性
    xlabel('Radial Velocity (m/s)');
    ylabel('Height (m)');
    gap=' ';
    title([time gap freq]);
    legend('show');
    grid on;

    % 保持坐标轴调整状态并显示图表
    hold off;
end